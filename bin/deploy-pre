#!/usr/bin/env bash
set -ex

export SOLC_FLAGS=${SOLC_FLAGS:-"--optimize"}
export ETH_GAS=${ETH_GAS:-"3500000"}
export ETH_FROM=${ETH_FROM:-$(seth rpc eth_coinbase)}

dapp build

# ETHUSD feed
export DAI_PIP='0x729D19f657BD0614b4985Cf1D82531c67569197B'

# MKRUSD feed
export DAI_PEP='0x99041F808D598B782D5a3e498681C2452A31da08'

# WETH9
export DAI_GEM='0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'

# Token burner
export DAI_PIT=$(dapp create GemPit)

# MKR address
export DAI_GOV='0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2'

# Chief
## Voting IOU
export DAI_IOU=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii 'IOU')))
export DAI_ADM=$(dapp create DSChief $DAI_GOV $DAI_IOU 5)
seth send $DAI_IOU 'setOwner(address)' $DAI_ADM

cat > load-pre-$(seth chain) << EOF
test -z $DAI_GEM && GEMtx=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii 'ETH')))
#!/bin/bash

# pre-dai deployment on $(seth chain) from $(git rev-parse HEAD)
# $(date)

export DAI_GEM=$DAI_GEM
export DAI_GOV=$DAI_GOV
export DAI_PIP=$DAI_PIP
export DAI_PEP=$DAI_PEP
export DAI_PIT=$DAI_PIT
export DAI_ADM=$DAI_ADM
export DAI_IOU=$DAI_IOU
EOF
